--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88 
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER
]=]

-- Instances: 32 | Scripts: 9 | Modules: 0
local G2L = {};

-- StarterGui.ScreenGui
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;

-- StarterGui.ScreenGui.WindowFrame
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 2;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(241, 241, 241);
G2L["2"]["Size"] = UDim2.new(0, 600, 0, 400);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Position"] = UDim2.new(0.5, -300, 0.5, -200);
G2L["2"]["Name"] = [[WindowFrame]];

-- StarterGui.ScreenGui.WindowFrame.TitleBar
G2L["3"] = Instance.new("Frame", G2L["2"]);
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(71, 131, 181);
G2L["3"]["Size"] = UDim2.new(1, 0, 0, 30);
G2L["3"]["Name"] = [[TitleBar]];

-- StarterGui.ScreenGui.WindowFrame.TitleBar.TitleText
G2L["4"] = Instance.new("TextLabel", G2L["3"]);
G2L["4"]["BorderSizePixel"] = 2;
G2L["4"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["4"]["TextSize"] = 16;
G2L["4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["Size"] = UDim2.new(1, -100, 1, 0);
G2L["4"]["Text"] = [[Work At Pizza Place SCRIPT GUI]];
G2L["4"]["Name"] = [[TitleText]];
G2L["4"]["BackgroundTransparency"] = 1;
G2L["4"]["Position"] = UDim2.new(0, 5, 0, 0);

-- StarterGui.ScreenGui.WindowFrame.TitleBar.MinimizeButton
G2L["5"] = Instance.new("TextButton", G2L["3"]);
G2L["5"]["BorderSizePixel"] = 2;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(71, 131, 181);
G2L["5"]["TextSize"] = 16;
G2L["5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5"]["Size"] = UDim2.new(0, 30, 0, 30);
G2L["5"]["Name"] = [[MinimizeButton]];
G2L["5"]["Text"] = [[_]];
G2L["5"]["Position"] = UDim2.new(1.0499999523162842, -90, 0, 0);

-- StarterGui.ScreenGui.WindowFrame.TitleBar.MinimizeButton.LocalScript
G2L["6"] = Instance.new("LocalScript", G2L["5"]);


-- StarterGui.ScreenGui.WindowFrame.TitleBar.CloseButton
G2L["7"] = Instance.new("TextButton", G2L["3"]);
G2L["7"]["BorderSizePixel"] = 2;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
G2L["7"]["TextSize"] = 20;
G2L["7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["Size"] = UDim2.new(0, 30, 0, 30);
G2L["7"]["Name"] = [[CloseButton]];
G2L["7"]["Text"] = [[X]];
G2L["7"]["Position"] = UDim2.new(1, -30, 0, 0);

-- StarterGui.ScreenGui.WindowFrame.TitleBar.CloseButton.LocalScript
G2L["8"] = Instance.new("LocalScript", G2L["7"]);


-- StarterGui.ScreenGui.WindowFrame.MenuBar
G2L["9"] = Instance.new("Frame", G2L["2"]);
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(201, 201, 201);
G2L["9"]["Size"] = UDim2.new(1, 0, 0, 20);
G2L["9"]["Position"] = UDim2.new(0, 0, 0, 30);
G2L["9"]["Name"] = [[MenuBar]];

-- StarterGui.ScreenGui.WindowFrame.MenuBar.BI
G2L["a"] = Instance.new("TextButton", G2L["9"]);
G2L["a"]["TextWrapped"] = true;
G2L["a"]["TextScaled"] = true;
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(201, 201, 201);
G2L["a"]["TextSize"] = 14;
G2L["a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Size"] = UDim2.new(0, 100, 1, 0);
G2L["a"]["Name"] = [[BI]];
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Text"] = [[trolling]];

-- StarterGui.ScreenGui.WindowFrame.MenuBar.AI
G2L["b"] = Instance.new("TextButton", G2L["9"]);
G2L["b"]["TextWrapped"] = true;
G2L["b"]["TextScaled"] = true;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(201, 201, 201);
G2L["b"]["TextSize"] = 14;
G2L["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["Size"] = UDim2.new(0, 100, 1, 0);
G2L["b"]["Name"] = [[AI]];
G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["Text"] = [[Farm]];
G2L["b"]["Position"] = UDim2.new(0, 100, 0, 0);

-- StarterGui.ScreenGui.WindowFrame.ContentArea
G2L["c"] = Instance.new("Frame", G2L["2"]);
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["Size"] = UDim2.new(1, 0, 1, -50);
G2L["c"]["Position"] = UDim2.new(0, 0, 0, 50);
G2L["c"]["Name"] = [[ContentArea]];

-- StarterGui.ScreenGui.WindowFrame.ContentArea.credits
G2L["d"] = Instance.new("TextLabel", G2L["c"]);
G2L["d"]["TextWrapped"] = true;
G2L["d"]["LineHeight"] = 1.2000000476837158;
G2L["d"]["TextStrokeTransparency"] = 0;
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Italic);
G2L["d"]["TextTransparency"] = 0.5699999928474426;
G2L["d"]["TextSize"] = 14;
G2L["d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["Size"] = UDim2.new(0, 240, 0, 50);
G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["Text"] = [[This script  was made by @G0bbyD0llan57 on YT]];
G2L["d"]["Name"] = [[credits]];
G2L["d"]["BackgroundTransparency"] = 0.9900000095367432;
G2L["d"]["Position"] = UDim2.new(0, 0, 0.8999999761581421, 0);

-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling
G2L["e"] = Instance.new("Frame", G2L["c"]);
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["BackgroundTransparency"] = 1;
G2L["e"]["Size"] = UDim2.new(0, 600, 0, 350);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Name"] = [[trolling]];

-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.PlayerNameTextBox
G2L["f"] = Instance.new("TextBox", G2L["e"]);
G2L["f"]["BorderSizePixel"] = 2;
G2L["f"]["TextSize"] = 20;
G2L["f"]["TextWrapped"] = true;
G2L["f"]["TextScaled"] = true;
G2L["f"]["BackgroundColor3"] = Color3.fromRGB(35, 35, 35);
G2L["f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f"]["PlaceholderText"] = [[Enter the player's name...]];
G2L["f"]["Size"] = UDim2.new(0.9150000214576721, 0, 0.10000000149011612, 0);
G2L["f"]["Text"] = [[]];
G2L["f"]["Position"] = UDim2.new(0.03500000014901161, 0, 0.019999999552965164, 0);
G2L["f"]["Name"] = [[PlayerNameTextBox]];
G2L["f"]["ClearTextOnFocus"] = false;

-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.PlayerNameTextBox.LocalScript
G2L["10"] = Instance.new("LocalScript", G2L["f"]);


-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.Frame
G2L["11"] = Instance.new("Frame", G2L["e"]);
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["BackgroundTransparency"] = 1;
G2L["11"]["Size"] = UDim2.new(0, 549, 0, 280);
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["Position"] = UDim2.new(0.03500000014901161, 0, 0.1542857140302658, 0);

-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.Frame.ActionButtonMANAGER
G2L["12"] = Instance.new("TextButton", G2L["11"]);
G2L["12"]["TextWrapped"] = true;
G2L["12"]["BorderSizePixel"] = 0;
G2L["12"]["TextScaled"] = true;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(0, 121, 216);
G2L["12"]["TextSize"] = 20;
G2L["12"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["12"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12"]["Size"] = UDim2.new(1.001429796218872, 0, 0.11428571492433548, 0);
G2L["12"]["Name"] = [[ActionButtonMANAGER]];
G2L["12"]["Text"] = [[manager]];
G2L["12"]["Position"] = UDim2.new(-0.0014298235764726996, 0, -0.002857099287211895, 0);

-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.Frame.ActionButtonMANAGER.LocalScript
G2L["13"] = Instance.new("LocalScript", G2L["12"]);


-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.Frame.ActionButtonBRING
G2L["14"] = Instance.new("TextButton", G2L["11"]);
G2L["14"]["TextWrapped"] = true;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["TextScaled"] = true;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(0, 121, 216);
G2L["14"]["TextSize"] = 20;
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["Size"] = UDim2.new(1.001429796218872, 0, 0.11428571492433548, 0);
G2L["14"]["Name"] = [[ActionButtonBRING]];
G2L["14"]["Text"] = [[bring]];
G2L["14"]["Position"] = UDim2.new(-0.0014298235764726996, 0, 0.14000004529953003, 0);

-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.Frame.ActionButtonBRING.LocalScript
G2L["15"] = Instance.new("LocalScript", G2L["14"]);


-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.Frame.ActionButtonTRASH
G2L["16"] = Instance.new("TextButton", G2L["11"]);
G2L["16"]["TextWrapped"] = true;
G2L["16"]["BorderSizePixel"] = 0;
G2L["16"]["TextScaled"] = true;
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(0, 121, 216);
G2L["16"]["TextSize"] = 20;
G2L["16"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["16"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16"]["Size"] = UDim2.new(1.001429796218872, 0, 0.11428571492433548, 0);
G2L["16"]["Name"] = [[ActionButtonTRASH]];
G2L["16"]["Text"] = [[fill it with garbage]];
G2L["16"]["Position"] = UDim2.new(-0.0014298235764726996, 0, 0.28285717964172363, 0);

-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.Frame.ActionButtonTRASH.LocalScript
G2L["17"] = Instance.new("LocalScript", G2L["16"]);


-- StarterGui.ScreenGui.WindowFrame.DraggableScript
G2L["18"] = Instance.new("LocalScript", G2L["2"]);
G2L["18"]["Name"] = [[DraggableScript]];

-- StarterGui.ScreenGui.WindowFrame.CloseWarning
G2L["19"] = Instance.new("Frame", G2L["2"]);
G2L["19"]["BorderSizePixel"] = 5;
G2L["19"]["BackgroundColor3"] = Color3.fromRGB(132, 132, 132);
G2L["19"]["Size"] = UDim2.new(0, 227, 0, 145);
G2L["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19"]["Position"] = UDim2.new(0.3100000023841858, 0, 0.37892860174179077, 0);
G2L["19"]["Visible"] = false;
G2L["19"]["Name"] = [[CloseWarning]];

-- StarterGui.ScreenGui.WindowFrame.CloseWarning.title
G2L["1a"] = Instance.new("TextLabel", G2L["19"]);
G2L["1a"]["BorderSizePixel"] = 2;
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a"]["TextSize"] = 14;
G2L["1a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a"]["Size"] = UDim2.new(0, 227, 0, 26);
G2L["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a"]["Text"] = [[Warning]];
G2L["1a"]["Name"] = [[title]];

-- StarterGui.ScreenGui.WindowFrame.CloseWarning.warning
G2L["1b"] = Instance.new("TextLabel", G2L["19"]);
G2L["1b"]["TextWrapped"] = true;
G2L["1b"]["BorderSizePixel"] = 3;
G2L["1b"]["TextScaled"] = true;
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1b"]["TextSize"] = 14;
G2L["1b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["Size"] = UDim2.new(0, 211, 0, 53);
G2L["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["Text"] = [[Are you sure you want to close this window?]];
G2L["1b"]["Name"] = [[warning]];
G2L["1b"]["Position"] = UDim2.new(0.030837005004286766, 0, 0.22068965435028076, 0);

-- StarterGui.ScreenGui.WindowFrame.CloseWarning.Frame
G2L["1c"] = Instance.new("Frame", G2L["19"]);
G2L["1c"]["BorderSizePixel"] = 0;
G2L["1c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1c"]["BackgroundTransparency"] = 1;
G2L["1c"]["Size"] = UDim2.new(0, 227, 0, 52);
G2L["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c"]["Position"] = UDim2.new(0, 0, 0.6413792967796326, 0);

-- StarterGui.ScreenGui.WindowFrame.CloseWarning.Frame.no
G2L["1d"] = Instance.new("TextButton", G2L["1c"]);
G2L["1d"]["TextWrapped"] = true;
G2L["1d"]["BorderSizePixel"] = 2;
G2L["1d"]["TextScaled"] = true;
G2L["1d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1d"]["TextSize"] = 14;
G2L["1d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1d"]["TextColor3"] = Color3.fromRGB(255, 0, 5);
G2L["1d"]["Size"] = UDim2.new(0, 54, 0, 50);
G2L["1d"]["Name"] = [[no]];
G2L["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d"]["Text"] = [[No]];
G2L["1d"]["Position"] = UDim2.new(0.030837005004286766, 0, 0.03846153989434242, 0);

-- StarterGui.ScreenGui.WindowFrame.CloseWarning.Frame.no.LocalScript
G2L["1e"] = Instance.new("LocalScript", G2L["1d"]);


-- StarterGui.ScreenGui.WindowFrame.CloseWarning.Frame.yes
G2L["1f"] = Instance.new("TextButton", G2L["1c"]);
G2L["1f"]["TextWrapped"] = true;
G2L["1f"]["BorderSizePixel"] = 2;
G2L["1f"]["TextScaled"] = true;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f"]["TextSize"] = 14;
G2L["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f"]["TextColor3"] = Color3.fromRGB(56, 255, 0);
G2L["1f"]["Size"] = UDim2.new(0, 54, 0, 50);
G2L["1f"]["Name"] = [[yes]];
G2L["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["Text"] = [[yes]];
G2L["1f"]["Position"] = UDim2.new(0.6740087866783142, 0, 0.03846153989434242, 0);

-- StarterGui.ScreenGui.WindowFrame.CloseWarning.Frame.yes.LocalScript
G2L["20"] = Instance.new("LocalScript", G2L["1f"]);


-- StarterGui.ScreenGui.WindowFrame.TitleBar.MinimizeButton.LocalScript
local function C_6()
local script = G2L["6"];
	local maximizeButton = script.Parent
	local ContentArea = maximizeButton.Parent.Parent.ContentArea
	local MenuBar = maximizeButton.Parent.Parent.MenuBar
	local WindowFrame = maximizeButton.Parent.Parent.Parent.WindowFrame
	local Minimized = false
	maximizeButton.MouseButton1Click:Connect(function()
		if Minimized == false then
			ContentArea.Visible = false
			MenuBar.Visible = false
			WindowFrame.Size = UDim2.new(0, 600,0, 30)
			Minimized = true
			maximizeButton.Text = "[]"
		elseif Minimized == true then
			ContentArea.Visible = true
			MenuBar.Visible = true
			WindowFrame.Size = UDim2.new(0, 600,0, 400)
			maximizeButton.Text = "_"
			Minimized = false
		end
	end)
end;
task.spawn(C_6);
-- StarterGui.ScreenGui.WindowFrame.TitleBar.CloseButton.LocalScript
local function C_8()
local script = G2L["8"];
	local CloseButton = script.Parent --TextButton
	CloseButton.MouseButton1Click:Connect(function()
		local CloseWarning = script.Parent.Parent.Parent.CloseWarning
		if CloseWarning.Visible == true then return end
		CloseWarning.Visible = true
	end)
end;
task.spawn(C_8);
-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.PlayerNameTextBox.LocalScript
local function C_10()
local script = G2L["10"];
	-- Obtén el TextBox
	local textBox = script.Parent
	local set = function(name)
	if typeof(name) == "string" then
	textBox.Text = name
	end
	end
	-- Función para buscar al jugador
	local function buscarJugador(nombre)
		-- Crear una expresión regular para buscar coincidencias parciales
		local pattern = "^" .. nombre:lower() .. ".*$"
	
		-- Buscar coincidencias en los nombres de los jugadores
		for _, player in ipairs(game.Players:GetPlayers()) do
			if player.Name:lower():match(pattern) or player.DisplayName:lower():match(pattern) then
				print("player Found: " .. player.Name)
				set(player.Name)
			end
		end
	end
	
	-- Conectar la función al evento FocusLost del TextBox
	textBox.FocusLost:Connect(function(enterPressed)
		-- Verificar si se presionó la tecla Enter al perder el foco
		if enterPressed then
			-- Obtener el texto del TextBox
			local PlayerName = textBox.Text
	
			-- Verificar si el texto no está vacío
			if PlayerName ~= "" then
				-- Buscar al jugador usando el texto del TextBox
				buscarJugador(PlayerName:lower()) -- Convertir a minúsculas para hacer coincidencia de caso-insensitivo
			else
				warn("operation canceled because the Textbox has no text.")
			end
		end
	end)
	
end;
task.spawn(C_10);
-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.Frame.ActionButtonMANAGER.LocalScript
local function C_13()
local script = G2L["13"];
	local function bring(player, position)
		local Players = game:GetService("Players")
		local player = Players.LocalPlayer
		local humanoid = player.Character.Humanoid
		local man = player
		--deletes a glitchy chair in the office (optional)
		if workspace:FindFirstChild("ExtraChair") and workspace.ExtraChair:FindFirstChild("Seat") then
			workspace.ExtraChair.Seat:Destroy()
		end
	
		if man then
			--check if he's respawning or sitting
			local htxt
			if man.Character==nil or man.Character:FindFirstChild("HumanoidRootPart")==nil or man.Character:FindFirstChild("Humanoid")==nil then
				htxt = "Failed because player is respawning"
			end
			local target = man.Character.HumanoidRootPart
			if man.Character.Humanoid.Sit then
				htxt = "Failed because player is sitting"
			end
			if htxt then
				local h = Instance.new("Message",workspace)
				h.Text = htxt
				wait(3)
				h:Destroy()
				return
			end
			--get in a car
			if not workspace.Cars:IsAncestorOf(humanoid.SeatPart) then
				humanoid.Sit=false
				wait(0.1)
				for _,car in ipairs(workspace.Cars:GetChildren()) do
					if car:FindFirstChild("Driver") and car.Driver.Occupant==nil and car:FindFirstChild("Owner") and car.Owner.Value==nil then
						car.Driver:Sit(humanoid)
						wait(0.3)
						if humanoid.SeatPart then
							break
						end
					end
				end
			end
			local seat = humanoid.SeatPart
			local car = seat.Parent
			local returncf = position
			for _,v in ipairs(car:GetChildren()) do if v.Name=="Wheel" then v.CanCollide=false end end
			seat.CanCollide = false
			for j=1,4 do
				--attempt to sit manager
				seat.Anchored=false
				local e = 0
				while car.HoodSeat.Occupant==nil and target.Parent and e<5 do
					local newpos = target.Position+Vector3.new(0,-3,0)+target.CFrame.lookVector*4.5+target.Velocity*Vector3.new(.5,0,.5)
					local flatdir = (target.CFrame.lookVector*Vector3.new(1,0,1)).Unit --target's looking direction, flattened
					if not (flatdir.x < 2) then --inf
						flatdir = Vector3.new(1,0,0)
					end
					car:SetPrimaryPartCFrame(CFrame.new(newpos,newpos-flatdir))
					seat.Velocity=Vector3.new()
					local e2=0
					while car.HoodSeat.Occupant==nil and target.Parent and e2<0.7 do
						e2=e2+wait()
					end
					e=e+e2
				end
				--attempt to move manager
				car:SetPrimaryPartCFrame(returncf)
				wait(.1)
				car:SetPrimaryPartCFrame(returncf)
				wait(.1)
				car:SetPrimaryPartCFrame(returncf)
				seat.Anchored=true
	wait(2)
				car.HoodSeat:ClearAllChildren() --unsits anyone
				wait(1)
					break
			end
			--reset car
			seat.Anchored=false
			wait()
			car:SetPrimaryPartCFrame(CFrame.new(120,10,-75))
			wait()
		end
	
		--become manager
		humanoid.Sit=false
		wait(0.1)
		player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame+Vector3.new(5,5,6)
	end
	local function manager(playerToManager)
		--by sirelKilla (v3rm)
	
		--vars
		local Players = game:GetService("Players")
		local player = Players.LocalPlayer
		local humanoid = player.Character.Humanoid
		local mteam = game:GetService("Teams").Manager
		local man = mteam:GetPlayers()[1]
		--deletes a glitchy chair in the office (optional)
		if workspace:FindFirstChild("ExtraChair") and workspace.ExtraChair:FindFirstChild("Seat") then
			workspace.ExtraChair.Seat:Destroy()
		end
	
		if man then
			--check if he's respawning or sitting
			local htxt
			if man.Character==nil or man.Character:FindFirstChild("HumanoidRootPart")==nil or man.Character:FindFirstChild("Humanoid")==nil then
				htxt = "Failed because manager is respawning"
			end
			local target = man.Character.HumanoidRootPart
			if man.Character.Humanoid.Sit then
				htxt = "Failed because manager is sitting"
			end
			if htxt then
				local h = Instance.new("Message",workspace)
				h.Text = htxt
				wait(3)
				h:Destroy()
				return
			end
			--get in a car
			if not workspace.Cars:IsAncestorOf(humanoid.SeatPart) then
				humanoid.Sit=false
				wait(0.1)
				for _,car in ipairs(workspace.Cars:GetChildren()) do
					if car:FindFirstChild("Driver") and car.Driver.Occupant==nil and car:FindFirstChild("Owner") and car.Owner.Value==nil then
						car.Driver:Sit(humanoid)
						wait(0.3)
						if humanoid.SeatPart then
							break
						end
					end
				end
			end
			local seat = humanoid.SeatPart
			local car = seat.Parent
			local returncf = CFrame.new(17,-3.5,21)*CFrame.Angles(0,math.pi/2,0)
			for _,v in ipairs(car:GetChildren()) do if v.Name=="Wheel" then v.CanCollide=false end end
			seat.CanCollide = false
			for j=1,4 do
				--attempt to sit manager
				seat.Anchored=false
				local e = 0
				while car.HoodSeat.Occupant==nil and mteam:GetPlayers()[1] and target.Parent and e<5 do
					local newpos = target.Position+Vector3.new(0,-3,0)+target.CFrame.lookVector*4.5+target.Velocity*Vector3.new(.5,0,.5)
					local flatdir = (target.CFrame.lookVector*Vector3.new(1,0,1)).Unit --target's looking direction, flattened
					if not (flatdir.x < 2) then --inf
						flatdir = Vector3.new(1,0,0)
					end
					car:SetPrimaryPartCFrame(CFrame.new(newpos,newpos-flatdir))
					seat.Velocity=Vector3.new()
					local e2=0
					while car.HoodSeat.Occupant==nil and mteam:GetPlayers()[1] and target.Parent and e2<0.7 do
						e2=e2+wait()
					end
					e=e+e2
				end
				--attempt to move manager
				car:SetPrimaryPartCFrame(returncf)
				wait(.1)
				car:SetPrimaryPartCFrame(returncf)
				seat.Anchored=true
				e = 0
				while mteam:GetPlayers()[1] and target.Parent and e<1 do
					e=e+wait()
				end
				car.HoodSeat:ClearAllChildren() --unsits anyone
				e = 0
				while mteam:GetPlayers()[1] and target.Parent and e<0.5 do
					e=e+wait()
				end
				if mteam:GetPlayers()[1]==nil or target.Parent==nil then
					break
				end
			end
			--reset car
			seat.Anchored=false
			wait()
			car:SetPrimaryPartCFrame(CFrame.new(120,10,-75))
			wait()
		end
	
		--become manager
		humanoid.Sit=false
		wait(2)
		bring(playerToManager, workspace.ManagerChair.Seat.CFrame)
	end
	local function getplayer()
	local textbox = script.Parent.Parent.Parent.PlayerNameTextBox
	local player = game.Players:FindFirstChild(textbox.Text)
	if player then
	return player
	end
	end
	
	script.Parent.MouseButton1Click:Connect(function()
		local PlayerToManager = getplayer()
		if PlayerToManager then
			local mteam = game:GetService("Teams").Manager
			local man = mteam:GetPlayers()[1]
			if typeof(man) == "Instance" and man:IsA("Player") then
			if not man.Name == PlayerToManager.Name then
			manager(PlayerToManager)
			end
			end
		end
	end)
end;
task.spawn(C_13);
-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.Frame.ActionButtonBRING.LocalScript
local function C_15()
local script = G2L["15"];
	local function bring(player, position)
		local Players = game:GetService("Players")
		local player = Players.LocalPlayer
		local humanoid = player.Character.Humanoid
		local man = player
		--deletes a glitchy chair in the office (optional)
		if workspace:FindFirstChild("ExtraChair") and workspace.ExtraChair:FindFirstChild("Seat") then
			workspace.ExtraChair.Seat:Destroy()
		end
	
		if man then
			--check if he's respawning or sitting
			local htxt
			if man.Character==nil or man.Character:FindFirstChild("HumanoidRootPart")==nil or man.Character:FindFirstChild("Humanoid")==nil then
				htxt = "Failed because player is respawning"
			end
			local target = man.Character.HumanoidRootPart
			if man.Character.Humanoid.Sit then
				htxt = "Failed because player is sitting"
			end
			if htxt then
				local h = Instance.new("Message",workspace)
				h.Text = htxt
				wait(3)
				h:Destroy()
				return
			end
			--get in a car
			if not workspace.Cars:IsAncestorOf(humanoid.SeatPart) then
				humanoid.Sit=false
				wait(0.1)
				for _,car in ipairs(workspace.Cars:GetChildren()) do
					if car:FindFirstChild("Driver") and car.Driver.Occupant==nil and car:FindFirstChild("Owner") and car.Owner.Value==nil then
						car.Driver:Sit(humanoid)
						wait(0.3)
						if humanoid.SeatPart then
							break
						end
					end
				end
			end
			local seat = humanoid.SeatPart
			local car = seat.Parent
			local returncf = position
			for _,v in ipairs(car:GetChildren()) do if v.Name=="Wheel" then v.CanCollide=false end end
			seat.CanCollide = false
			for j=1,4 do
				--attempt to sit manager
				seat.Anchored=false
				local e = 0
				while car.HoodSeat.Occupant==nil and target.Parent and e<5 do
					local newpos = target.Position+Vector3.new(0,-3,0)+target.CFrame.lookVector*4.5+target.Velocity*Vector3.new(.5,0,.5)
					local flatdir = (target.CFrame.lookVector*Vector3.new(1,0,1)).Unit --target's looking direction, flattened
					if not (flatdir.x < 2) then --inf
						flatdir = Vector3.new(1,0,0)
					end
					car:SetPrimaryPartCFrame(CFrame.new(newpos,newpos-flatdir))
					seat.Velocity=Vector3.new()
					local e2=0
					while car.HoodSeat.Occupant==nil and target.Parent and e2<0.7 do
						e2=e2+wait()
					end
					e=e+e2
				end
				--attempt to move manager
				car:SetPrimaryPartCFrame(returncf)
				wait(.1)
				car:SetPrimaryPartCFrame(returncf)
				wait(.1)
				car:SetPrimaryPartCFrame(returncf)
				seat.Anchored=true
	wait(2)
				car.HoodSeat:ClearAllChildren() --unsits anyone
				wait(1)
					break
			end
			--reset car
			seat.Anchored=false
			wait()
			car:SetPrimaryPartCFrame(CFrame.new(120,10,-75))
			wait()
		end
	
		--become manager
		humanoid.Sit=false
		wait(0.1)
		player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame+Vector3.new(5,5,6)
	end
	
	local function getplayer()
		local textbox = script.Parent.Parent.Parent.PlayerNameTextBox
		local player = game.Players:FindFirstChild(textbox.Text)
		if player then
			return player
		end
	end
	script.Parent.MouseButton1Click:Connect(function()
		local PlayerToManager = getplayer()
		if PlayerToManager then
	bring(PlayerToManager, game.Players.LocalPlayer.Character.PrimaryPart.CFrame)
		end
	end)
end;
task.spawn(C_15);
-- StarterGui.ScreenGui.WindowFrame.ContentArea.trolling.Frame.ActionButtonTRASH.LocalScript
local function C_17()
local script = G2L["17"];
	local function getplayer()
		local textbox = script.Parent.Parent.Parent.PlayerNameTextBox
		local player = game.Players:FindFirstChild(textbox.Text)
		if player then
			return player
		end
	end
	local remote
	do
		local reg = (getreg or debug.getregistry)()
		for i=1,#reg do
			local f = reg[i]
			if type(f)=="table" and rawget(f,"FireServer") and rawget(f,"BindEvents") then
				remote = f
			end
		end
	end
	function moveThing(bmd, location)
		remote:FireServer("UpdateProperty", bmd, "CFrame", location)
		wait()
		remote:FireServer("SquishDough", bmd)
	end
	local ruinherlife = false
	local playerToF0ckIt
	script.Parent.MouseButton1Click:Connect(function()
		local PlayerToManager = getplayer()
		if PlayerToManager then
	playerToF0ckIt = PlayerToManager
	ruinherlife = not ruinherlife
	if ruinherlife then
	script.Parent.Text ="un fill it with garbage"
	else
	script.Parent.Text = "fill it with garbage"
	end
		end
	end)
		spawn(function()
			while ruinherlife and wait() do
		local posicionActual = playerToF0ckIt.Character.HumanoidRootPart.Position
			if not posicionActual then return end
				spawn(function()
					for i,v in pairs(workspace.AllDough:GetChildren()) do
					local NEWPLRPOS = CFrame.new(
						posicionActual.X + math.random(-5, 5), -- Variación en el eje X (-10 a 10)
						posicionActual.Y, -- Mantenemos la misma altura
						posicionActual.Z + math.random(-5, 5) -- Variación en el eje Z (-10 a 10)
					)
						moveThing(v, NEWPLRPOS)
					end
				end)
				spawn(function()
					for i,v in pairs(workspace.AllMountainDew:GetChildren()) do
					local NEWPLRPOS = CFrame.new(
						posicionActual.X + math.random(-5, 5), -- Variación en el eje X (-10 a 10)
						posicionActual.Y, -- Mantenemos la misma altura
						posicionActual.Z + math.random(-5, 5) -- Variación en el eje Z (-10 a 10)
					)
					moveThing(v, NEWPLRPOS)
					end
				end)
				spawn(function()
					for i,v in pairs(workspace.BoxingRoom:GetChildren()) do
					local NEWPLRPOS = CFrame.new(
						posicionActual.X + math.random(-5, 5), -- Variación en el eje X (-10 a 10)
						posicionActual.Y, -- Mantenemos la misma altura
						posicionActual.Z + math.random(-5, 5) -- Variación en el eje Z (-10 a 10)
					)
					moveThing(v, NEWPLRPOS)
					end
				end)
				spawn(function()
					for i,v in pairs(workspace.AllBox:GetChildren()) do
					local NEWPLRPOS = CFrame.new(
						posicionActual.X + math.random(-5, 5), -- Variación en el eje X (-10 a 10)
						posicionActual.Y, -- Mantenemos la misma altura
						posicionActual.Z + math.random(-5, 5) -- Variación en el eje Z (-10 a 10)
					)
					moveThing(v, NEWPLRPOS)
					end
				end)
				spawn(function()
					for i,v in pairs(workspace.AllSupplyBoxes:GetChildren()) do
					local NEWPLRPOS = CFrame.new(
						posicionActual.X + math.random(-5, 5), -- Variación en el eje X (-10 a 10)
						posicionActual.Y, -- Mantenemos la misma altura
						posicionActual.Z + math.random(-5, 5) -- Variación en el eje Z (-10 a 10)
					)
					moveThing(v, NEWPLRPOS)
					end
				end)
			end
		end)
end;
task.spawn(C_17);
-- StarterGui.ScreenGui.WindowFrame.DraggableScript
local function C_18()
local script = G2L["18"];
	--Variables
	local TitleBar = script.Parent["TitleBar"]
	local IsCursonOnTitleBar = false
	--MouseEnter and MouseLeave Connection
	TitleBar.MouseEnter:Connect(function()
		if IsCursonOnTitleBar == false then
			IsCursonOnTitleBar = true
		end
	end)
	TitleBar.MouseLeave:Connect(function()
		if IsCursonOnTitleBar == true then
			IsCursonOnTitleBar = false
		end
	end)
	--Making the draggable gui
	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		if IsCursonOnTitleBar then
			local delta = input.Position - dragStart
			gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end;
task.spawn(C_18);
-- StarterGui.ScreenGui.WindowFrame.CloseWarning.Frame.no.LocalScript
local function C_1e()
local script = G2L["1e"];
	local NoButton = script.Parent
	local CloseWarning = NoButton.Parent.Parent
	local function closewarning()
	CloseWarning.Visible = false
	end
	NoButton.MouseButton1Click:Connect(closewarning)
end;
task.spawn(C_1e);
-- StarterGui.ScreenGui.WindowFrame.CloseWarning.Frame.yes.LocalScript
local function C_20()
local script = G2L["20"];
	local yesbutton = script.Parent
	local ScreenGui = script.Parent.Parent.Parent.Parent.Parent
	script.Parent.MouseButton1Click:Connect(function()
		yesbutton.Visible = false
		yesbutton.Parent.no.Visible = false
		yesbutton.Parent.Parent.title.Text = "Ok, Clossing..."
		wait(0.5)
		yesbutton.Parent.Parent.warning.Text = "Thanks for using my script, By G0bbyD0llan57 :D"
		wait(0.5)
		script.Parent.Parent.Parent.Parent.MenuBar.Visible = false
		wait(0.5)
		script.Parent.Parent.Parent.Parent.TitleBar.Visible = false
		wait(0.5)
		script.Parent.Parent.Parent.Parent.Parent.WindowFrame.Transparency = 1
		wait(0.5)
		script.Parent.Parent.Parent.Parent.ContentArea.Transparency = 1
		wait(0.5)
		ScreenGui:Destroy()
	end)
end;
task.spawn(C_20);

return G2L["1"], require;
